openapi: 3.0.3
info:
  title: Gest-stock
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/auth/login:
    post:
      summary: 'Permet de connecer l''utilisateur'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"token\": \"eyJ0eXA...\",\n \"user\": {\n     id: 1,\n     .....\n },\n \"success\": \"Connecté avec success\"\n}"
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Nom d''utilisateur ou adresse email.      Exemple: user@example.com, user123'
                  example: explicabo
                password:
                  type: string
                  description: 'Mot de passe.'
                  example: secret
              required:
                - email
                - password
      security: []
  /api/connected-user:
    get:
      summary: 'Permet de recuperer l''utilisateur connecté'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom_personnel:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: whjwkkiiglcyupolcnivosqmfjumdnocpctsuhrnzinhguzetfoxtntvrncumxrhvxakwxbtgcntmakgdqtcozauksmetbsljmryswwuemfusqprptzesqqyb
                prenoms_personnel:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: qznyixbvctcizrzllyyuwetdffrptnyiekovzisahuxhftecvsvorqgokzgnwyoybtnzmuinraraadeprdjkdpjsnpdhtvxtebixnyipzfkewwszfgqvlwrxcpfelioyushtlmbbcgvzbprcprwumwxti
                contact_personnel:
                  type: string
                  description: ''
                  example: eaque
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: lgndhgowdgojkhsmrsvsfvqewaarvzdbhsxvaokbwwuuyiioebqktiikqlvsubjytdamwhjc
                adresse_personnel:
                  type: string
                  description: ''
                  example: exercitationem
                cin_personnel:
                  type: string
                  description: 'Must be 12 digits.'
                  example: '181586638286'
                username:
                  type: string
                  description: 'This field is required when <code>hasAccount</code> is <code>true</code>. Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: pqkiodgvdkjmwauxgymlhkmvlgddpnztfkjnxippplmcacykexryqtxlozknanzahakcsaqeefumtnryfjsrpenilstkjblyhkqyfgcpfcqhyzjaxtazowolunujt
                password:
                  type: string
                  description: 'The password of the  user.'
                  example: secret
                password_confirmation:
                  type: string
                  description: 'This field is required when <code>hasAccount</code> is <code>true</code>. Must be at least 8 characters. Must not be greater than 255 characters.'
                  example: jhckpmcqvtxsrfepbyjjpnaxfjyfmyqappvwnegfljmtrznpxnuyubeacmzifulxlayazuxfyncyvbtn
                roles:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                permissions:
                  type: array
                  description: ''
                  example:
                    - ut
                  items:
                    type: string
                fonctions:
                  type: array
                  description: ''
                  example:
                    - sed
                  items:
                    type: string
                login:
                  type: string
                  description: 'Username or email adress of the user.      Exemple: testuser@example.com, user123'
                  example: velit
              required:
                - nom_personnel
                - contact_personnel
                - adresse_personnel
                - password
                - fonctions
                - login
      security: []
  '/api/user/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom_personnel:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: myqrdozhgbrjjikazgwmnzfuqjlntmgqqvspyneugjnmrxdbobxahwnsavrxvxrqyqexyxmftjmqnplnkcuekfzxugnkysdnzpckem
                prenoms_personnel:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: vsugrfdnekvymhlzlzyadgvefxahwiqagjgqumtwamynojdyhsgszpqkmphqeqthkdtsnmtjuvspvnlmraowcbfguyfirfciuteyjrxlgsagdbielissrtehlmwlfrployzgzpwjhqhbkjtofycmlxrrfguinsjantzazccutwdzndrgscgiwflpcdgicdhl
                contact_personnel:
                  type: string
                  description: ''
                  example: nihil
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: nzsqozrytytsbtjnpcqdgrlievddsa
                adresse_personnel:
                  type: string
                  description: ''
                  example: sit
                cin_personnel:
                  type: string
                  description: 'Must be 12 digits.'
                  example: '113336187920'
                username:
                  type: string
                  description: 'This field is required when <code>hasAccount</code> is <code>true</code>. Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: fmuyoxblhjixjxsikfqbqkqgbcawexuijhmchlymqztypuholyckrboabgwhcjptvamatwklvzbphlwgkausptmvcwumzggjrmd
                password:
                  type: string
                  description: 'This field is required when <code>hasAccount</code> is <code>true</code>. Must be at least 8 characters. Must not be greater than 255 characters.'
                  example: wuaxgjydojiqxxbykdsocorqoqpxrwfhhyxrmilxjbligscscvctdxalslmyufiiskwlyqhzqfistfwibbbgredblpdkeraineedhtaqf
                password_confirmation:
                  type: string
                  description: 'This field is required when <code>hasAccount</code> is <code>true</code>. Must be at least 8 characters. Must not be greater than 255 characters.'
                  example: exikkwxwiqgrvzlqvpowskpou
                permissions:
                  type: array
                  description: ''
                  example:
                    - minima
                  items:
                    type: string
                roles:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                fonctions:
                  type: array
                  description: ''
                  example:
                    - rerum
                  items:
                    type: string
              required:
                - nom_personnel
                - contact_personnel
                - adresse_personnel
                - fonctions
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/auth/logout:
    post:
      summary: 'Deconnecter l''utilisateur et supprimer la session'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/abilities:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/roles/search:
    get:
      summary: 'Permet de rechercher un role en particulier en fonction de la recherche'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/roles:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom_role:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: vrzmoaxjpstgvyziofdcqpaubwbtsflejtaocuplrxydfpgwqcjcigrkxksyqlltdrsperawoakzduxyuwxcrgdqdgjsaqkfjrdxihmleljwwenevadhdkbytaroxydztduzr
              required:
                - nom_role
      security: []
  '/api/roles/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the role.'
        example: 1
        required: true
        schema:
          type: integer
  /api/fonctions:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom_fonction:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: lncwpsxnlrgpbzshqm
                description_fonction:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 5000 characters.'
                  example: ruelcycrpzfftvhkgdwcodqyjjyhnrihocyxwojskdwqqlcrlggqmhhtzkqeyrjfxsqwbooxfruyenljpnfpnhhduovkvewmarnvmskabkghjpbgdmrzbypiyzbezrsvqlplukkpcpvxankouhlqitqqmemuvygjgxgdzrfsoicmzjlsuongybthvzlkccchllpnvcdnlcbfdlwjejorlcasfkyolgjezwgrmphvkmnrwjqeeigymulmrvuevhmwzmglshpodvfiwkwfulmkmccjyiulomrlbjxzaqrgndraa
                enfants:
                  type: array
                  description: ''
                  example:
                    - dolorem
                  items:
                    type: string
                permissions:
                  type: array
                  description: ''
                  example:
                    - aut
                  items:
                    type: string
              required:
                - nom_fonction
      security: []
  '/api/fonctions/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Mise a jour de la fonciton'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom_fonction:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: ibyccyvflkcawpmcivuelioeqxbnitwjhwcpruozjnfinilyssqcetjeeggbukwekaaonyawvcasewwwmzyufytjclshgsmfxxxilqxdudcxessjyszxcmrpkolhcuvfgqyukcetybkgjnphtsnpxkqkiulbyondnqkbkvvltzlgbmytvickmzvsgtoky
                description_fonction:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 5000 characters.'
                  example: embgbwtmqeldzayhspofuwhfwvlqynmoneiznbttsyfjcdpbazbfaaudyebrfuanxahvhrxwzynlqcnhbgynhgrukgwxhnmzmuexhxtkhvjumabpqlnqppdmuctlwspplbridrhljdjkmesqistkatnvdlkbbtreatejrmcac
                enfants:
                  type: array
                  description: ''
                  example:
                    - voluptas
                  items:
                    type: string
                permissions:
                  type: array
                  description: ''
                  example:
                    - totam
                  items:
                    type: string
              required:
                - nom_fonction
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the fonction.'
        example: 1
        required: true
        schema:
          type: integer
  /api/permissions-fonction:
    get:
      summary: 'Retourner tous les persmisisons des fonctions selectionnés'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/permissions-groups:
    get:
      summary: 'Recuperer les permissions groupé par les fonctions passé dans request'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/depot:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: pehdtjdrvjptvfnuvzkuygqghvwkqgazsslnizkdxyslwkbzzifdgugwwosfkhzntpnxuoymvquxodcwjqorviyacb
                localisation:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: bnamilanfdlnoxthnbjtipniwolzohdtxehfumfqjgnzbwgcbydnxuyjcgoaohtpqfxphpxovdxbbqtdsnfilbnnaikhrbtdcqjdsltyywpbhztfngvuagycptmdbfnhwykcffoxqlnbknxruuihgbaievpdaabhithgmdwmsv
                contact:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 255 characters.'
                  example: qzmavapsvocnxbawcunpvbeyblim
                point_vente:
                  type: boolean
                  description: ''
                  example: false
              required:
                - nom
                - localisation
                - point_vente
      security: []
  '/api/depot/{id}':
    get:
      summary: 'Voir un dépot spécifique'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Supprimer un dépot'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Mettre a jour un depot'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: smpfbjtxpvjixyyiryhfvnezidmrdfcoeuossbteymgolhstnmjjnutktueidfvmwndwtufrijtowcyyocnvcqwanhqovdnonbktytovdxznwtvkkebxjbelutrhwwtkhdcitgkvjqscgnmuvgglfrzlloyiduuroprhpqvtlpewjhztsccynpbrmlstyxtffivpnn
                localisation:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: fzewiectazqbjswtgws
                contact:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 255 characters.'
                  example: ltkwzsprdmjvxdrsirgfmferzvbijobchyvwticqihcpglreslqzupy
                point_vente:
                  type: boolean
                  description: 'Must be one of <code>true</code>, <code>false</code>, <code>1</code>, or <code>0</code>.'
                  example: 'true'
                responsables:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                travailleurs:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                type:
                  type: number
                  description: 'Must be at least 0. Must not be greater than 3.'
                  example: 0
              required:
                - nom
                - localisation
                - point_vente
                - type
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the depot.'
        example: 1
        required: true
        schema:
          type: integer
  /api/categorie:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                libelle:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: vmfioxhwsotvajtaigusedoaekfbbpcsbggkwhmurvofgfwpwdmlwznreejchcjbpgesrcdxiyzliawzgkkfnbiatmmritypublgyubagxvdiabqnjmuwisbwgirmkiaxtqbxakssstorwjaqwiobzrhokbastxgaxttvobl
                description:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 1000 characters.'
                  example: uverpxafgrtofvzqmovpuisuvoraagfpzrwnrvzlnkzhhimvhmsmxzgxzkfdgmmdtoqlpzaletzomsryobdndealgbgsmmtntscpoperjygblzxzqqpsellaekbexhmzloularkvmrhmejiwvnyrkaykyoxtnjotuhmmyfegjxgfhxtobjfbcenzwihwngjrzawdwvkznuifiiwhfkzjbeazdxlmxcnjvraoucfbviwxrhktlcepkiekqhedpfydcuiwursnjrjdcyhcdljvaeclpdlvnzeeldryggtmzznmplptcrexhygxzqndrpbvazlrhjotgfvlnuybjxvyszlroisksuzfqydaeqybecoidtupxuvfsnpyzbbfctlfcnglrgdzsbyzrfjseipdpvmopweicavzkiooyymlqktkufszxyjvhdjzamrzdtdiizqhaiydmtocmlbkysreyildbgqxtgagvvxxjafgmqyogauneasiqauclddibqtotoeecxxillalqschlpixmvqphcbfkzrkafjmbyfqfvuvpvfhacidbcnqawulomtllvvsmtoeqltlmyhregfrhqrdwjzxkxceepnevlcvmbmudcfdrqoctsgyiozuqsalcslwgazuvyjquatvqiwqcskwhqtevrypdbvgvlxpkderyvhlyeolrpj
                type:
                  type: number
                  description: 'Must be at least 1.'
                  example: 0
                sous_categories:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
              required:
                - libelle
                - type
      security: []
  '/api/categorie/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                libelle:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: ygtbjimzhufghnpbzahbnbvyzitbitpischskkplfbojeembrzpvxlrgzigfhxypttmwjhpwqxmxicfprrienvkcbikujmqulwxlbygdfvqmcqsknobfrmyktxzvcbjhuscmojjlmnmtzwjsidsjoqwyofjmqjqoqttkcnejtqqdwahuzaz
                description:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 1000 characters.'
                  example: zpqjczwbkofmgbrdgqrdoxqotyrwuwxjpsfukockwyclunzioqllndqhrbadjdgcxhysbkbpzbueytkffaxdhsqvwxasneqvxoyytyuldshdgdetkemhiidhqwupxkqlosvwsemgtddwkjdtcelvptjwiwvyjubjzvpecmbkqnadzhlielbodeyixogtitcotfqcmuijiwhwuyxnkntbqqyjblcfrpbgtjzzhamuuvzckwhhorcsazpofmforantkbxrleovcqzcxjkdtmslhawkjvdcacobmfalzzclezlsikiuhztzcwmcvkocltltzmeenmtcwohofuparnkemjtwnopfatqghbdjhkbtlvfjhgbrwubtyclyfkwcztcpkymbnaxzpulvheedyiiqqpwrwoejlxzfetihngisutzliuoobpevzvcuvysopjhgxjfupplqiblavjwjjkzashowzlmhvzskyxfevhwlkkutqdaeisypewnakvzwobzmgssbloglgjwcdmconjhwkwtilxeuxbutmkkiholeqtlrwskccuyxcxrhspefyrhtugjeysedxbkycjscdtldhzfkmynmbklupmkknfqdwkarypblxdarfzsbmgcxhhrkixuohoxxzrrugkokiuobiyjdolvfzvzhrcjogjwrqhsixnyqygegejavirfnsryxmrmhfizblgfdroaqekhcqkapgsbciuabsmfpekmavmwygbcgdywypqdutwgmhxafbcgxcpzmlrspmhqcjzeqbxxbonakmrpqtlzhjbhojkudjaau
                type:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                sous_categories:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
              required:
                - libelle
                - type
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the categorie.'
        example: 1
        required: true
        schema:
          type: integer
  /api/fournisseur:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: fuyuqdbtgjhggqyxqjfcvihytjjybcvsxvzcnofcjdbmemesnvgtzhkodukqjnqsikeizxhjvzrfeearukznqqlwspodgvvmvmigmlnuxdiuuyejhapgarwcwnyymkjtkqvnpxnidioulofi
                adresse:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: khnagmqukphqljknsobgmyowdovoyifttlseehuatfdaextoxausaghvdxiyjepuqwfkbfxnkjlgefnmmizwsnweakgclm
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: bfbuqlnwkhdvqbhhamyhqxchsmrdqxbddfuueqnecacmzvlbyzgnlcxcfoubautvjrusjtgeniudwqkpqwnrezywvsrqmqppqrbwqpbdtemmxntqniklucnvfltqccyfsafxymvhdhkbbjsdfonqokc
                contact:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 30 characters.'
                  example: bbjbosgkugljo
                categories:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                nif:
                  type: string
                  description: 'The value format is invalid.'
                  example: '3975045930014'
                cif:
                  type: string
                  description: 'The value format is invalid.'
                  example: d5441147c
                stat:
                  type: string
                  description: 'The value format is invalid.'
                  example: 507s982s959s05936
              required:
                - nom
                - adresse
                - contact
      security: []
  '/api/fournisseur/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: bdekhskfnwegzogxokrbxpopbvabacykqxjghgeyxxnsmbijayjkqniphpwthuvcybrovicpduwqgeofvycktjteydyjhrymmoqtyfsuzjtqcdadtvffjaqccxerldgvsuicvkhpwpgfewekrnmjjlvpvbwqyqpsnqklzswiafvkmrbpgiksmtxukkzhdablnyjqwcdakrkzlqoeaoxzcfe
                adresse:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: drmwdxsvjzolxryozvlpqzawcsqwyzzbiri
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: aeseaezsdjqlgfsbaryybymduxsekqqbl
                contact:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 30 characters.'
                  example: nfcoccvt
                categories:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                nif:
                  type: string
                  description: 'The value format is invalid.'
                  example: '2610414307664'
                cif:
                  type: string
                  description: 'The value format is invalid.'
                  example: t85768772
                stat:
                  type: string
                  description: 'The value format is invalid.'
                  example: 330s368s310s89024
              required:
                - nom
                - adresse
                - contact
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the fournisseur.'
        example: 1
        required: true
        schema:
          type: integer
  /api/client:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: nmtovuqmfparkkbybkwjiehmouunayfdzqiiyyqpchsfxnbhfbsyvjcxloumndcwnqwdipdafvuliplbtspsjffwetsppyhmteyuhwzdjecreqereyrfamxtgrqfdynoermyrbxxfnzsgnnxspqqqz
                adresse:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: dhxwcbmouuiywstpximelwncqqswzktcwruaydktthsfhfqisoebafc
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: ibgvzisiieypqmcpfuwojrazaegctpoatpqxaspwyrmsnxdfqqrzogtgcgjcjhacdylajqmxorotzsjwixymakalx
                contact:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 30 characters.'
                  example: tycejdiyoamynagbl
                categories:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                nif:
                  type: string
                  description: ''
                  example: null
                cif:
                  type: string
                  description: ''
                  example: null
                stat:
                  type: string
                  description: ''
                  example: null
              required:
                - nom
                - adresse
                - contact
      security: []
  '/api/client/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: pxncblrixhkumjyrjvmrgvhritrpommsmpq
                adresse:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: ubpgjccjzsttcisfdgelqpecjhfaovcryzfrfalxpmwauivfmekwkedbyccplfvqmooawygzvpqbesh
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: amxkzkvzhssemipxirsprhijgdhpodoqhjsalouyertzyrlxsxcacacarstdqiplyyxrornjurlmxncycitzbmslaulupggbgfxtfcntdnlseauxoezxrboksqsnlijifvvocnjgwnngcoyesfekjsheqkmhgnstdfcfmbqpz
                contact:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 30 characters.'
                  example: o
                categories:
                  type: array
                  description: ''
                  example:
                    - null
                  items:
                    type: string
                nif:
                  type: string
                  description: 'The value format is invalid.'
                  example: '2251275578038'
                cif:
                  type: string
                  description: 'The value format is invalid.'
                  example: t6490998E
                stat:
                  type: string
                  description: 'The value format is invalid.'
                  example: 783s394s401s84191
              required:
                - nom
                - adresse
                - contact
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the client.'
        example: 1
        required: true
        schema:
          type: integer
  /api/article:
    get:
      summary: 'Recuperer la liste des articles'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Enregistrer un nouveau article'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reference:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: anyzmmvvogjdetrjtnujltntxpxkxyxnnlbaehlcqtxjjxcvvbyiwtqvvvaaeuwgxqefgxngzixvrggyyeadzltfbilhbzzxgpknpdrhzewjphaeihjtognkqguopjldnvlosldtxfdgxdcegpzdqydorepjdmfwnwdanjkrebbdowbgpknycslpvhsakwaokbeobvmnyrnirzymexknhzfdkywdoupegrxzwkuqalpbw
                designation:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: hyjvtvljapwcndpcxxgrsjdhyxwxqfvmtppgkzmgicvfyzjlaevpfasud
                unite:
                  type: string
                  description: 'Must be at least 1 characters. Must not be greater than 255 characters.'
                  example: ummqdrzmbqfkoazdezauqxhcppyjbbmeeliqbqdvqbipmnbqgccyvqovpgs
                stock_alert:
                  type: number
                  description: 'Must be at least 0. Must not be greater than 999999999999.'
                  example: 964380893809
                categories:
                  type: array
                  description: ''
                  example:
                    - dolorem
                  items:
                    type: string
              required:
                - reference
                - designation
                - unite
                - categories
      security: []
  '/api/article/{id}':
    get:
      summary: 'Voir un article spécifique'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Supprimer un article de la base de données'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Mettre a jour un article'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reference:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: dtiaftkcgalrrratmuqnnseqxbynurbaobqcemtbdibdybfxenzredtqsmcdmpoqzltrbwtmmmuflefpcnlysyqizdeymjakjddzbivlhiylzrqtprdcsdjnxkwsjhifvqbamszciqujfpskevomubhuicjjsghswovntgmhpeejddxwwqesfndocqqrysfxcddprixeayrtvqpqmgrhdejxhzhvwqlfgtq
                designation:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: xponbxvzzcfitvuyplmmqffaccxcpkjeytgrzretnoispadvpqmtuumxaxdzlxlwqwsnnykvyqqmhsxfgnqujjesamqnkkzwsftjgijonebvpwgogmcsjjhrcrdiubropxzshxtpuqkr
                unite:
                  type: string
                  description: 'Must be at least 1 characters. Must not be greater than 255 characters.'
                  example: qavsbuotksqjoghkwztlshpjyhmgybxktluyjfwbqyw
                stock_alert:
                  type: number
                  description: 'Must be at least 0. Must not be greater than 999999999999.'
                  example: 893080308152
                categories:
                  type: array
                  description: ''
                  example:
                    - qui
                  items:
                    type: string
              required:
                - reference
                - designation
                - unite
                - categories
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the article.'
        example: 1
        required: true
        schema:
          type: integer
  /api/commandes/get-key:
    get:
      summary: 'Recuperer le dernier dernier devis'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/commandes:
    get:
      summary: 'Display a listing of the orders or quotations.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created order or quotation in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                numero:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: agwepmnshhpnuztsklrltmixhwwfruzdtemfmcngyiotmjuayycgbgilxxdxwbuxornzaafqdlgcabbmehfexczddadpvyvasrrchawevqbwzyhsjrdznlmmwchrjbrqmoucnvemdmvtahfumrimntgkbpykzyzhpoalouczvwomlifjdpmmjtegdyuvhqfnergmbol
                type:
                  type: string
                  description: 'Must be one of <code>1</code> or <code>2</code>.'
                  example: '2'
                date:
                  type: string
                  description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-09-16'
                validite:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 365.'
                  example: 70
                fournisseur:
                  type: string
                  description: 'This field is required when <code>client</code> is <code>null</code>.'
                  example: null
                client:
                  type: string
                  description: 'This field is required when <code>fournisseur</code> is <code>null</code>.'
                  example: null
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 10000 kilobytes.'
                articles:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ''
                        example: perferendis
                      pu:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999999.99.'
                        example: 757948541124
                      tva:
                        type: number
                        description: 'Must be at least 0. Must not be greater than 100.'
                        example: 23
                      quantite:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999.99.'
                        example: 420044368
                      object:
                        type: array
                        description: ''
                        example:
                          - quam
                        items:
                          type: string
                      montant_ht:
                        type: number
                        description: ''
                        example: 165145.795
                      montant_ttc:
                        type: number
                        description: ''
                        example: 115241240.44
                    required:
                      - id
                      - pu
                      - tva
                      - quantite
                      - montant_ht
                      - montant_ttc
                adresse_livraison:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: njtiwigtxtrxmslzuqqebmeeznhdjxclgtbcvsksrmjwrwcuhnmxqwcyjtwonqtzvsporbjwrlmdkaezaeiuzuzfczjlqzkkubzrp
                devis:
                  type: number
                  description: ''
                  example: 584.24323186
                depot:
                  type: string
                  description: ''
                  example: null
                login:
                  type: string
                  description: 'Username or email adress of the user.      Exemple: testuser@example.com, user123'
                  example: expedita
                password:
                  type: string
                  description: 'The password of the  user.'
                  example: secret
              required:
                - numero
                - type
                - date
                - login
                - password
      security: []
  '/api/commandes/{id}':
    get:
      summary: 'Display the specified order or quotation.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified order or quotation from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified order or quotation in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                numero:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: uwljoxghbkbjetysmfucpctomu
                type:
                  type: string
                  description: 'Must be one of <code>1</code> or <code>2</code>.'
                  example: '2'
                date:
                  type: string
                  description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-09-16'
                validite:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 365.'
                  example: 354
                fournisseur:
                  type: string
                  description: 'This field is required when <code>client</code> is <code>null</code>.'
                  example: null
                client:
                  type: string
                  description: 'This field is required when <code>fournisseur</code> is <code>null</code>.'
                  example: null
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 10000 kilobytes.'
                articles:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ''
                        example: voluptatem
                      pu:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999999.99.'
                        example: 184625060554
                      tva:
                        type: number
                        description: 'Must be at least 0. Must not be greater than 100.'
                        example: 10
                      quantite:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999.99.'
                        example: 799009660
                      object:
                        type: array
                        description: ''
                        example:
                          - voluptatum
                        items:
                          type: string
                      montant_ht:
                        type: number
                        description: ''
                        example: 35.3718094
                      montant_ttc:
                        type: number
                        description: ''
                        example: 180569.22635388
                    required:
                      - id
                      - pu
                      - tva
                      - quantite
                      - montant_ht
                      - montant_ttc
                adresse_livraison:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: gbvxtfuonzrujdmlzsdioogjqjwekzuneqxyzotjlzjxpjq
                devis:
                  type: number
                  description: ''
                  example: 1180092.035722
                depot:
                  type: string
                  description: ''
                  example: null
              required:
                - numero
                - type
                - date
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the commande.'
        example: 1
        required: true
        schema:
          type: integer
  /api/parametres/generale:
    get:
      summary: 'Recuperer L''information De L''entreprise'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Enregistrer l''information de l''entreprise'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: qqxcpmioerjpplzowiyqjbcyzapqdqrlxvanxcreknymmlkphjfdtqeyl
                contact:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 25 characters.'
                  example: qnjsfpcousdvrhorxcrmklrqy
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: horace29@example.net
                assujeti:
                  type: boolean
                  description: ''
                  example: true
                nif:
                  type: string
                  description: ''
                  example: null
                stat:
                  type: string
                  description: ''
                  example: null
              required:
                - nom
                - contact
                - email
                - assujeti
      security: []
  '/api/parametres/generale/{parametre_id}':
    patch:
      summary: 'Undocumented function'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: xzbgrkchmzvysvkxrgiucmtqhwnpumurpwdzwknogtucfffekocthxlkzgvwljzsfwqhnegfttkyzhscvmacpskebpdyizujryjrytsgfggwcxetzhrnoncryvmtovgibgqikovvfcjgecdbibqaihywybvxqdagndlpxgwdcrtfplqhftiiruuemtndsts
                contact:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 25 characters.'
                  example: ohdnsfummvyaudw
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: nadia08@example.org
                assujeti:
                  type: boolean
                  description: ''
                  example: true
                nif:
                  type: string
                  description: ''
                  example: null
                stat:
                  type: string
                  description: ''
                  example: null
              required:
                - nom
                - contact
                - email
                - assujeti
      security: []
    parameters:
      -
        in: path
        name: parametre_id
        description: 'The ID of the parametre.'
        example: 2
        required: true
        schema:
          type: integer
  /api/bon-receptions:
    post:
      summary: 'Creer un nouveau ressource dans la base de données'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                numero:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: cnnnbtaiygloslnakbrvmhtklpgbwcegrjogwhqelymomkuaee
                date:
                  type: string
                  description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-09-16'
                articles:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ''
                        example: alias
                      quantite:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999.99.'
                        example: 3634040
                      total:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999.99.'
                        example: 399765002
                      valide:
                        type: boolean
                        description: ''
                        example: false
                    required:
                      - id
                      - quantite
                      - total
                      - valide
                adresse_livraison:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: ugqeqvikupscbraqtbpfhtqplwxhlxefmziswfhuyvkujaaqjsj
                livreur:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: iegojkbvebrvawvugscekgkpuqnchdlzudtjcbhvemmcomiqsrv
                contact_livreur:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: dqultvdlcydhlmphniroaqhgghlmdhqfchuisqhsplnuorisrlwtitkiiqhsvcinbwyxpalgzslfpikdkaubbxa
                depot:
                  type: string
                  description: ''
                  example: magni
                commande:
                  type: number
                  description: ''
                  example: 98180.8491326
              required:
                - numero
                - date
                - depot
      security: []
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/bon-receptions/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                numero:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: jmauqjqulcxqiynecdtcuegbfpjpzsxoqovqifvzbtoejlp
                date:
                  type: string
                  description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-09-16'
                articles:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ''
                        example: cupiditate
                      quantite:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999.99.'
                        example: 31867706
                      total:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999.99.'
                        example: 322791541
                      valide:
                        type: boolean
                        description: ''
                        example: false
                    required:
                      - id
                      - quantite
                      - total
                      - valide
                adresse_livraison:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: xkvzrghzctaupwetivcvgecodgmyzkdckegworkibfhkabcupkwwnohrieezwbnmsqabbpufzdwmoefnzslpruvfblmazqjtkolzrcuxsrlnak
                livreur:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: utoupanpgzuucthorllcdznnzloosjderpwzubkcckwjiksgmnffoibpfmqjzdlpqinohczlvzwnwuevciocxnvrzmcehoeuunxzhpygnxfxpulmuzsbnogtyoxzeiddbcekwkxpdcddhawrwbmheufrxkvqiybdlzrpiueghgwdesvqnpbhorwytpvludifqkxasstdxqlvvhringbpamltjxpelwalb
                contact_livreur:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: msdeyzsv
                depot:
                  type: string
                  description: ''
                  example: sit
                commande:
                  type: number
                  description: ''
                  example: 13.23432
              required:
                - numero
                - date
                - depot
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the bon reception.'
        example: 1
        required: true
        schema:
          type: integer
  /api/bon-livraisons:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                numero:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: lijarytkfmhxdulymufooybmzxqvctsfdfwqfxewcvfkolfxfwbdvrfvusigyfrwuvyyndrtbupsvqhinwqhvdbacmmzpkykvmehyfghgoeetmlqzghspcmwedpmybxfynvteodyavmfycmtjsxqpnfnaexalphsvdaygxqcubtbrjbpjpbwndxzvjosaxplwndvkuzskfblmmeupqkanaryvcrfxzbaajuiqhclbrgetnjfe
                date:
                  type: string
                  description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-09-16'
                articles:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ''
                        example: necessitatibus
                      quantite:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999.99.'
                        example: 113535027
                      total:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999.99.'
                        example: 491491010
                      valide:
                        type: boolean
                        description: ''
                        example: false
                    required:
                      - id
                      - quantite
                      - total
                      - valide
                adresse_livraison:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: feueuneijzpezfqjihrfakarfbfrpgeyyapgevkiufacpqyeuusmfeehkalmmurgqhyxonxrgkzgicsobakhehellffsehhdgjzksjisufyjpslkpmgndwqorqvjccntqzuxqxofjcbowrfzuzhbamglrsjtkzykwddlpdyeuckchrznzgvruhfogfdddhnxuxykwxlyndgbuh
                livreur:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: awxzbpawafiudtbfbntuspthxejnsbtxucuszjprxnvsgbggetipawytqqkijdwczvyhubykzmsscjgowytysvetxlabjwoeelkplhritpbpafkcbajhlbnaanhfqkpkeuffnuppruulztazbhjknphbudncwxumjmcvbjnpegtjnkvgdppuccvuwgquxicodjedcrrcuwacdydxwlqvtpdfllcsfblqaguoddnrwpkxxqbjhjxklu
                contact_livreur:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: rrzdxfqqsezervtwmycvpwznnqpakhvabsqxnjaozamxebztruttjcxkzemoivlzxkioinqcguhvacxkwiaicncshkzkrehxmzwcyfcfwdlkwe
                commande:
                  type: number
                  description: ''
                  example: 35.3435016
              required:
                - numero
                - date
      security: []
  '/api/bon-livraisons/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                numero:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: dkh
                date:
                  type: string
                  description: 'Must be a valid date. Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-09-16'
                articles:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ''
                        example: voluptates
                      quantite:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999.99.'
                        example: 450987928
                      total:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999.99.'
                        example: 271598333
                      valide:
                        type: boolean
                        description: ''
                        example: true
                    required:
                      - id
                      - quantite
                      - total
                      - valide
                adresse_livraison:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: krrkkshctjdrjvhclcccdetfidnglshzfyzzyksfjmilguiuxibfiolamaerttbvrikzclwjdssoogjojwtwbrlgc
                livreur:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 255 characters.'
                  example: jqemfhwaqpqtdbyxksxlextmroktgeidiaxfxe
                contact_livreur:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 255 characters.'
                  example: eutytutlodedpqqbtkpbgwvaepodaamctxhmigdrmm
                depot:
                  type: string
                  description: ''
                  example: architecto
                commande:
                  type: number
                  description: ''
                  example: 23.365
              required:
                - numero
                - date
                - depot
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the bon livraison.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/depot/{depot_id}/articles':
    get:
      summary: "Permet de recuperer tous les articles dans un dépot\nAvec un calcul de stock d'entrée moins stock de sortie (Entree - Sortie)"
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: depot_id
        description: 'The ID of the depot.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/depot/{depot_id}/gerer-prix/{article_id}':
    post:
      summary: 'Permet de gerer le prix dans un depot'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                articles:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      reference:
                        type: string
                        description: ''
                        example: delectus
                      designation:
                        type: string
                        description: ''
                        example: temporibus
                      quantite:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999999.'
                        example: 407141578398
                      pu:
                        type: number
                        description: 'Must be at least 1. Must not be greater than 999999999999.'
                        example: 922525363583
                    required:
                      - reference
                      - designation
                      - pu
      security: []
    parameters:
      -
        in: path
        name: depot_id
        description: 'The ID of the depot.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: article_id
        description: 'The ID of the article.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
