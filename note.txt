ENTREE EN STOCK

On veut mettre pour chaque reference d'article dans un depot en particulier (Entrepot ou Point de vente):
    -   Un prix global
    -   Un prix particulier (en précisant la quntité concerné)

SOLUTION N° 1:

    Principe:
        -   Création d'une table (depot_article_prix)
        -   Avec les colones:
            *   Identifiant du dépot
            *   Identifiant de l'article
            *   Prix unitaire (Global ou particulier)
            *   Quantité concerné (null|sqrt(1-0: Tous les articles - Le prix global, Supérieur à 0: Seulement les quantité spécifié)

    Details:
        Pour un article qui a un prix global et particulier, il y aura deux ou n enregistrements: Une pour le prix global (quantite = null|0),
        et la deuxième pour le prix particulier avec la quantité souhaité.

    Avantages:
        -   Simple a mettre en place
        -   Facilement comprehensible
        -   Pas besoin de mettre a jour la table pour des nouvelles entrée en stock (S'il n y a pas de prix particulier)

    Incovénients:
        -   Redondances des données
        -   Complexité des requêtes
        -   Complexité au niveau de récuperation des donées

    Recuperation des articles au niveau de vente:
        -   Afficher les articles avec differentes prix (Meme reference avec differentes prix).
        -   L'utilisateur choisi l'article qui lui convient avec le prix souhaité.
        -   Mise a jour de la quantité dans la table si le prix de l'article selectionné est un prix particulier.



SORTIE DE STOCK


1: matrix <- round(data.frame(x=c(0,0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), y=c(sqrt(1-0*0),sqrt(1-0.1*0.1), sqrt(1-0.2*0.2), sqrt(1-0.3*0.3), sqrt(1-0.4*0.4), sqrt(1-0.5*0.5), sqrt(1-0.6*0.6), sqrt(1-0.7*0.7), sqrt(1-0.8*0.8), sqrt(1-0.9*0.9), sqrt(1-1*1))), 3)
plot(matrix)

2: distance = round(dist(matrix, diag=TRUE), 3) // Avec arrondissement
distance = dist(matrix, diag=TRUE) // Sans arrondissement

3: clusted = hclust(distance, method="single")
plot(clusted, main="Dendrogramme", xlab="Xlab", ylab="Ylab") // main, Xlab et Ylab a remplacer par des textes adéquates

--- Regroupement des points par ordre décroissante

4: clusted = hclust(distance, method="complete")
plot(clusted, main="Dendrogramme", xlab="Xlab", ylab="Ylab") // main, Xlab et Ylab a remplacer par des textes adéquates

--- Les hierarchies de ces deux méthodes ne sont pas identiques

5:
    -   Le point le plus proche de 3 est:
        * 1 (Lien minimum)
        * 4 (Lien maximum)
